/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.customauthmanager.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import org.kisti.edison.customauthmanager.model.UserGroupRoleCustom;
import org.kisti.edison.customauthmanager.model.UserGroupRoleCustomModel;
import org.kisti.edison.customauthmanager.model.UserGroupRoleCustomSoap;
import org.kisti.edison.customauthmanager.service.persistence.UserGroupRoleCustomPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UserGroupRoleCustom service. Represents a row in the &quot;EDAUT_UserGroupRoleCustom&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.kisti.edison.customauthmanager.model.UserGroupRoleCustomModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UserGroupRoleCustomImpl}.
 * </p>
 *
 * @author EDISON
 * @see UserGroupRoleCustomImpl
 * @see org.kisti.edison.customauthmanager.model.UserGroupRoleCustom
 * @see org.kisti.edison.customauthmanager.model.UserGroupRoleCustomModel
 * @generated
 */
@JSON(strict = true)
public class UserGroupRoleCustomModelImpl extends BaseModelImpl<UserGroupRoleCustom>
	implements UserGroupRoleCustomModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user group role custom model instance should use the {@link org.kisti.edison.customauthmanager.model.UserGroupRoleCustom} interface instead.
	 */
	public static final String TABLE_NAME = "EDAUT_UserGroupRoleCustom";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "roleId", Types.BIGINT },
			{ "customId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table EDAUT_UserGroupRoleCustom (userId LONG not null,groupId LONG not null,roleId LONG not null,customId LONG not null,createDate DATE null,primary key (userId, groupId, roleId, customId))";
	public static final String TABLE_SQL_DROP = "drop table EDAUT_UserGroupRoleCustom";
	public static final String ORDER_BY_JPQL = " ORDER BY userGroupRoleCustom.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY EDAUT_UserGroupRoleCustom.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.kisti.edison.customauthmanager.model.UserGroupRoleCustom"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.kisti.edison.customauthmanager.model.UserGroupRoleCustom"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.kisti.edison.customauthmanager.model.UserGroupRoleCustom"),
			true);
	public static long CUSTOMID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long ROLEID_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long CREATEDATE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UserGroupRoleCustom toModel(UserGroupRoleCustomSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UserGroupRoleCustom model = new UserGroupRoleCustomImpl();

		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setRoleId(soapModel.getRoleId());
		model.setCustomId(soapModel.getCustomId());
		model.setCreateDate(soapModel.getCreateDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UserGroupRoleCustom> toModels(
		UserGroupRoleCustomSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UserGroupRoleCustom> models = new ArrayList<UserGroupRoleCustom>(soapModels.length);

		for (UserGroupRoleCustomSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.kisti.edison.customauthmanager.model.UserGroupRoleCustom"));

	public UserGroupRoleCustomModelImpl() {
	}

	@Override
	public UserGroupRoleCustomPK getPrimaryKey() {
		return new UserGroupRoleCustomPK(_userId, _groupId, _roleId, _customId);
	}

	@Override
	public void setPrimaryKey(UserGroupRoleCustomPK primaryKey) {
		setUserId(primaryKey.userId);
		setGroupId(primaryKey.groupId);
		setRoleId(primaryKey.roleId);
		setCustomId(primaryKey.customId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new UserGroupRoleCustomPK(_userId, _groupId, _roleId, _customId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((UserGroupRoleCustomPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return UserGroupRoleCustom.class;
	}

	@Override
	public String getModelClassName() {
		return UserGroupRoleCustom.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("roleId", getRoleId());
		attributes.put("customId", getCustomId());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long roleId = (Long)attributes.get("roleId");

		if (roleId != null) {
			setRoleId(roleId);
		}

		Long customId = (Long)attributes.get("customId");

		if (customId != null) {
			setCustomId(customId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getRoleId() {
		return _roleId;
	}

	@Override
	public void setRoleId(long roleId) {
		_columnBitmask |= ROLEID_COLUMN_BITMASK;

		if (!_setOriginalRoleId) {
			_setOriginalRoleId = true;

			_originalRoleId = _roleId;
		}

		_roleId = roleId;
	}

	public long getOriginalRoleId() {
		return _originalRoleId;
	}

	@JSON
	@Override
	public long getCustomId() {
		return _customId;
	}

	@Override
	public void setCustomId(long customId) {
		_columnBitmask |= CUSTOMID_COLUMN_BITMASK;

		if (!_setOriginalCustomId) {
			_setOriginalCustomId = true;

			_originalCustomId = _customId;
		}

		_customId = customId;
	}

	public long getOriginalCustomId() {
		return _originalCustomId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public UserGroupRoleCustom toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UserGroupRoleCustom)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UserGroupRoleCustomImpl userGroupRoleCustomImpl = new UserGroupRoleCustomImpl();

		userGroupRoleCustomImpl.setUserId(getUserId());
		userGroupRoleCustomImpl.setGroupId(getGroupId());
		userGroupRoleCustomImpl.setRoleId(getRoleId());
		userGroupRoleCustomImpl.setCustomId(getCustomId());
		userGroupRoleCustomImpl.setCreateDate(getCreateDate());

		userGroupRoleCustomImpl.resetOriginalValues();

		return userGroupRoleCustomImpl;
	}

	@Override
	public int compareTo(UserGroupRoleCustom userGroupRoleCustom) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				userGroupRoleCustom.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UserGroupRoleCustom)) {
			return false;
		}

		UserGroupRoleCustom userGroupRoleCustom = (UserGroupRoleCustom)obj;

		UserGroupRoleCustomPK primaryKey = userGroupRoleCustom.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		UserGroupRoleCustomModelImpl userGroupRoleCustomModelImpl = this;

		userGroupRoleCustomModelImpl._originalUserId = userGroupRoleCustomModelImpl._userId;

		userGroupRoleCustomModelImpl._setOriginalUserId = false;

		userGroupRoleCustomModelImpl._originalGroupId = userGroupRoleCustomModelImpl._groupId;

		userGroupRoleCustomModelImpl._setOriginalGroupId = false;

		userGroupRoleCustomModelImpl._originalRoleId = userGroupRoleCustomModelImpl._roleId;

		userGroupRoleCustomModelImpl._setOriginalRoleId = false;

		userGroupRoleCustomModelImpl._originalCustomId = userGroupRoleCustomModelImpl._customId;

		userGroupRoleCustomModelImpl._setOriginalCustomId = false;

		userGroupRoleCustomModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<UserGroupRoleCustom> toCacheModel() {
		UserGroupRoleCustomCacheModel userGroupRoleCustomCacheModel = new UserGroupRoleCustomCacheModel();

		userGroupRoleCustomCacheModel.userId = getUserId();

		userGroupRoleCustomCacheModel.groupId = getGroupId();

		userGroupRoleCustomCacheModel.roleId = getRoleId();

		userGroupRoleCustomCacheModel.customId = getCustomId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			userGroupRoleCustomCacheModel.createDate = createDate.getTime();
		}
		else {
			userGroupRoleCustomCacheModel.createDate = Long.MIN_VALUE;
		}

		return userGroupRoleCustomCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", roleId=");
		sb.append(getRoleId());
		sb.append(", customId=");
		sb.append(getCustomId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append(
			"org.kisti.edison.customauthmanager.model.UserGroupRoleCustom");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roleId</column-name><column-value><![CDATA[");
		sb.append(getRoleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customId</column-name><column-value><![CDATA[");
		sb.append(getCustomId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = UserGroupRoleCustom.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			UserGroupRoleCustom.class
		};
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _roleId;
	private long _originalRoleId;
	private boolean _setOriginalRoleId;
	private long _customId;
	private long _originalCustomId;
	private boolean _setOriginalCustomId;
	private Date _createDate;
	private long _columnBitmask;
	private UserGroupRoleCustom _escapedModel;
}