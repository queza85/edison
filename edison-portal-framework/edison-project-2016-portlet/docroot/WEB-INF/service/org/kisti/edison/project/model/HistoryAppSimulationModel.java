/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.project.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.kisti.edison.project.service.persistence.HistoryAppSimulationPK;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the HistoryAppSimulation service. Represents a row in the &quot;EDPRJ_HistoryAppSimulation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.project.model.impl.HistoryAppSimulationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.project.model.impl.HistoryAppSimulationImpl}.
 * </p>
 *
 * @author EDISON
 * @see HistoryAppSimulation
 * @see org.kisti.edison.project.model.impl.HistoryAppSimulationImpl
 * @see org.kisti.edison.project.model.impl.HistoryAppSimulationModelImpl
 * @generated
 */
public interface HistoryAppSimulationModel extends BaseModel<HistoryAppSimulation> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a history app simulation model instance should use the {@link HistoryAppSimulation} interface instead.
	 */

	/**
	 * Returns the primary key of this history app simulation.
	 *
	 * @return the primary key of this history app simulation
	 */
	public HistoryAppSimulationPK getPrimaryKey();

	/**
	 * Sets the primary key of this history app simulation.
	 *
	 * @param primaryKey the primary key of this history app simulation
	 */
	public void setPrimaryKey(HistoryAppSimulationPK primaryKey);

	/**
	 * Returns the science app ID of this history app simulation.
	 *
	 * @return the science app ID of this history app simulation
	 */
	public long getScienceAppId();

	/**
	 * Sets the science app ID of this history app simulation.
	 *
	 * @param scienceAppId the science app ID of this history app simulation
	 */
	public void setScienceAppId(long scienceAppId);

	/**
	 * Returns the group ID of this history app simulation.
	 *
	 * @return the group ID of this history app simulation
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this history app simulation.
	 *
	 * @param groupId the group ID of this history app simulation
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the project category ID of this history app simulation.
	 *
	 * @return the project category ID of this history app simulation
	 */
	public long getProjectCategoryId();

	/**
	 * Sets the project category ID of this history app simulation.
	 *
	 * @param projectCategoryId the project category ID of this history app simulation
	 */
	public void setProjectCategoryId(long projectCategoryId);

	/**
	 * Returns the title of this history app simulation.
	 *
	 * @return the title of this history app simulation
	 */
	public String getTitle();

	/**
	 * Returns the localized title of this history app simulation in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized title of this history app simulation
	 */
	@AutoEscape
	public String getTitle(Locale locale);

	/**
	 * Returns the localized title of this history app simulation in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this history app simulation. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getTitle(Locale locale, boolean useDefault);

	/**
	 * Returns the localized title of this history app simulation in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized title of this history app simulation
	 */
	@AutoEscape
	public String getTitle(String languageId);

	/**
	 * Returns the localized title of this history app simulation in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this history app simulation
	 */
	@AutoEscape
	public String getTitle(String languageId, boolean useDefault);

	@AutoEscape
	public String getTitleCurrentLanguageId();

	@AutoEscape
	public String getTitleCurrentValue();

	/**
	 * Returns a map of the locales and localized titles of this history app simulation.
	 *
	 * @return the locales and localized titles of this history app simulation
	 */
	public Map<Locale, String> getTitleMap();

	/**
	 * Sets the title of this history app simulation.
	 *
	 * @param title the title of this history app simulation
	 */
	public void setTitle(String title);

	/**
	 * Sets the localized title of this history app simulation in the language.
	 *
	 * @param title the localized title of this history app simulation
	 * @param locale the locale of the language
	 */
	public void setTitle(String title, Locale locale);

	/**
	 * Sets the localized title of this history app simulation in the language, and sets the default locale.
	 *
	 * @param title the localized title of this history app simulation
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setTitle(String title, Locale locale, Locale defaultLocale);

	public void setTitleCurrentLanguageId(String languageId);

	/**
	 * Sets the localized titles of this history app simulation from the map of locales and localized titles.
	 *
	 * @param titleMap the locales and localized titles of this history app simulation
	 */
	public void setTitleMap(Map<Locale, String> titleMap);

	/**
	 * Sets the localized titles of this history app simulation from the map of locales and localized titles, and sets the default locale.
	 *
	 * @param titleMap the locales and localized titles of this history app simulation
	 * @param defaultLocale the default locale
	 */
	public void setTitleMap(Map<Locale, String> titleMap, Locale defaultLocale);

	/**
	 * Returns the version of this history app simulation.
	 *
	 * @return the version of this history app simulation
	 */
	@AutoEscape
	public String getVersion();

	/**
	 * Sets the version of this history app simulation.
	 *
	 * @param version the version of this history app simulation
	 */
	public void setVersion(String version);

	/**
	 * Returns the name of this history app simulation.
	 *
	 * @return the name of this history app simulation
	 */
	public String getName();

	/**
	 * Returns the localized name of this history app simulation in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized name of this history app simulation
	 */
	@AutoEscape
	public String getName(Locale locale);

	/**
	 * Returns the localized name of this history app simulation in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized name of this history app simulation. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getName(Locale locale, boolean useDefault);

	/**
	 * Returns the localized name of this history app simulation in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized name of this history app simulation
	 */
	@AutoEscape
	public String getName(String languageId);

	/**
	 * Returns the localized name of this history app simulation in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized name of this history app simulation
	 */
	@AutoEscape
	public String getName(String languageId, boolean useDefault);

	@AutoEscape
	public String getNameCurrentLanguageId();

	@AutoEscape
	public String getNameCurrentValue();

	/**
	 * Returns a map of the locales and localized names of this history app simulation.
	 *
	 * @return the locales and localized names of this history app simulation
	 */
	public Map<Locale, String> getNameMap();

	/**
	 * Sets the name of this history app simulation.
	 *
	 * @param name the name of this history app simulation
	 */
	public void setName(String name);

	/**
	 * Sets the localized name of this history app simulation in the language.
	 *
	 * @param name the localized name of this history app simulation
	 * @param locale the locale of the language
	 */
	public void setName(String name, Locale locale);

	/**
	 * Sets the localized name of this history app simulation in the language, and sets the default locale.
	 *
	 * @param name the localized name of this history app simulation
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setName(String name, Locale locale, Locale defaultLocale);

	public void setNameCurrentLanguageId(String languageId);

	/**
	 * Sets the localized names of this history app simulation from the map of locales and localized names.
	 *
	 * @param nameMap the locales and localized names of this history app simulation
	 */
	public void setNameMap(Map<Locale, String> nameMap);

	/**
	 * Sets the localized names of this history app simulation from the map of locales and localized names, and sets the default locale.
	 *
	 * @param nameMap the locales and localized names of this history app simulation
	 * @param defaultLocale the default locale
	 */
	public void setNameMap(Map<Locale, String> nameMap, Locale defaultLocale);

	/**
	 * Returns the affiliation_id of this history app simulation.
	 *
	 * @return the affiliation_id of this history app simulation
	 */
	@AutoEscape
	public String getAffiliation_id();

	/**
	 * Sets the affiliation_id of this history app simulation.
	 *
	 * @param affiliation_id the affiliation_id of this history app simulation
	 */
	public void setAffiliation_id(String affiliation_id);

	/**
	 * Returns the app status of this history app simulation.
	 *
	 * @return the app status of this history app simulation
	 */
	@AutoEscape
	public String getAppStatus();

	/**
	 * Sets the app status of this history app simulation.
	 *
	 * @param AppStatus the app status of this history app simulation
	 */
	public void setAppStatus(String AppStatus);

	/**
	 * Returns the user ID of this history app simulation.
	 *
	 * @return the user ID of this history app simulation
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this history app simulation.
	 *
	 * @param userId the user ID of this history app simulation
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this history app simulation.
	 *
	 * @return the user uuid of this history app simulation
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this history app simulation.
	 *
	 * @param userUuid the user uuid of this history app simulation
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the runtime of this history app simulation.
	 *
	 * @return the runtime of this history app simulation
	 */
	public long getRuntime();

	/**
	 * Sets the runtime of this history app simulation.
	 *
	 * @param runtime the runtime of this history app simulation
	 */
	public void setRuntime(long runtime);

	/**
	 * Returns the execute count of this history app simulation.
	 *
	 * @return the execute count of this history app simulation
	 */
	public long getExecuteCount();

	/**
	 * Sets the execute count of this history app simulation.
	 *
	 * @param executeCount the execute count of this history app simulation
	 */
	public void setExecuteCount(long executeCount);

	/**
	 * Returns the average runtime of this history app simulation.
	 *
	 * @return the average runtime of this history app simulation
	 */
	public long getAverageRuntime();

	/**
	 * Sets the average runtime of this history app simulation.
	 *
	 * @param averageRuntime the average runtime of this history app simulation
	 */
	public void setAverageRuntime(long averageRuntime);

	/**
	 * Returns the user count of this history app simulation.
	 *
	 * @return the user count of this history app simulation
	 */
	public long getUserCount();

	/**
	 * Sets the user count of this history app simulation.
	 *
	 * @param userCount the user count of this history app simulation
	 */
	public void setUserCount(long userCount);

	/**
	 * Returns the insert date of this history app simulation.
	 *
	 * @return the insert date of this history app simulation
	 */
	public Date getInsertDate();

	/**
	 * Sets the insert date of this history app simulation.
	 *
	 * @param insertDate the insert date of this history app simulation
	 */
	public void setInsertDate(Date insertDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(
		org.kisti.edison.project.model.HistoryAppSimulation historyAppSimulation);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.project.model.HistoryAppSimulation> toCacheModel();

	@Override
	public org.kisti.edison.project.model.HistoryAppSimulation toEscapedModel();

	@Override
	public org.kisti.edison.project.model.HistoryAppSimulation toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}