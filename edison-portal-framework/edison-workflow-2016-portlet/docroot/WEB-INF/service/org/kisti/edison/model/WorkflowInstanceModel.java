/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the WorkflowInstance service. Represents a row in the &quot;EDWF_WorkflowInstance&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.model.impl.WorkflowInstanceModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.model.impl.WorkflowInstanceImpl}.
 * </p>
 *
 * @author EDISON
 * @see WorkflowInstance
 * @see org.kisti.edison.model.impl.WorkflowInstanceImpl
 * @see org.kisti.edison.model.impl.WorkflowInstanceModelImpl
 * @generated
 */
public interface WorkflowInstanceModel extends BaseModel<WorkflowInstance> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a workflow instance model instance should use the {@link WorkflowInstance} interface instead.
	 */

	/**
	 * Returns the primary key of this workflow instance.
	 *
	 * @return the primary key of this workflow instance
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this workflow instance.
	 *
	 * @param primaryKey the primary key of this workflow instance
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the workflow instance ID of this workflow instance.
	 *
	 * @return the workflow instance ID of this workflow instance
	 */
	public long getWorkflowInstanceId();

	/**
	 * Sets the workflow instance ID of this workflow instance.
	 *
	 * @param workflowInstanceId the workflow instance ID of this workflow instance
	 */
	public void setWorkflowInstanceId(long workflowInstanceId);

	/**
	 * Returns the company ID of this workflow instance.
	 *
	 * @return the company ID of this workflow instance
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this workflow instance.
	 *
	 * @param companyId the company ID of this workflow instance
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this workflow instance.
	 *
	 * @return the user ID of this workflow instance
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this workflow instance.
	 *
	 * @param userId the user ID of this workflow instance
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this workflow instance.
	 *
	 * @return the user uuid of this workflow instance
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this workflow instance.
	 *
	 * @param userUuid the user uuid of this workflow instance
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this workflow instance.
	 *
	 * @return the create date of this workflow instance
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this workflow instance.
	 *
	 * @param createDate the create date of this workflow instance
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this workflow instance.
	 *
	 * @return the modified date of this workflow instance
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this workflow instance.
	 *
	 * @param modifiedDate the modified date of this workflow instance
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the title of this workflow instance.
	 *
	 * @return the title of this workflow instance
	 */
	public String getTitle();

	/**
	 * Returns the localized title of this workflow instance in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized title of this workflow instance
	 */
	@AutoEscape
	public String getTitle(Locale locale);

	/**
	 * Returns the localized title of this workflow instance in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this workflow instance. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getTitle(Locale locale, boolean useDefault);

	/**
	 * Returns the localized title of this workflow instance in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized title of this workflow instance
	 */
	@AutoEscape
	public String getTitle(String languageId);

	/**
	 * Returns the localized title of this workflow instance in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this workflow instance
	 */
	@AutoEscape
	public String getTitle(String languageId, boolean useDefault);

	@AutoEscape
	public String getTitleCurrentLanguageId();

	@AutoEscape
	public String getTitleCurrentValue();

	/**
	 * Returns a map of the locales and localized titles of this workflow instance.
	 *
	 * @return the locales and localized titles of this workflow instance
	 */
	public Map<Locale, String> getTitleMap();

	/**
	 * Sets the title of this workflow instance.
	 *
	 * @param title the title of this workflow instance
	 */
	public void setTitle(String title);

	/**
	 * Sets the localized title of this workflow instance in the language.
	 *
	 * @param title the localized title of this workflow instance
	 * @param locale the locale of the language
	 */
	public void setTitle(String title, Locale locale);

	/**
	 * Sets the localized title of this workflow instance in the language, and sets the default locale.
	 *
	 * @param title the localized title of this workflow instance
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setTitle(String title, Locale locale, Locale defaultLocale);

	public void setTitleCurrentLanguageId(String languageId);

	/**
	 * Sets the localized titles of this workflow instance from the map of locales and localized titles.
	 *
	 * @param titleMap the locales and localized titles of this workflow instance
	 */
	public void setTitleMap(Map<Locale, String> titleMap);

	/**
	 * Sets the localized titles of this workflow instance from the map of locales and localized titles, and sets the default locale.
	 *
	 * @param titleMap the locales and localized titles of this workflow instance
	 * @param defaultLocale the default locale
	 */
	public void setTitleMap(Map<Locale, String> titleMap, Locale defaultLocale);

	/**
	 * Returns the status of this workflow instance.
	 *
	 * @return the status of this workflow instance
	 */
	public String getStatus();

	/**
	 * Returns the localized status of this workflow instance in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized status of this workflow instance
	 */
	@AutoEscape
	public String getStatus(Locale locale);

	/**
	 * Returns the localized status of this workflow instance in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized status of this workflow instance. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getStatus(Locale locale, boolean useDefault);

	/**
	 * Returns the localized status of this workflow instance in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized status of this workflow instance
	 */
	@AutoEscape
	public String getStatus(String languageId);

	/**
	 * Returns the localized status of this workflow instance in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized status of this workflow instance
	 */
	@AutoEscape
	public String getStatus(String languageId, boolean useDefault);

	@AutoEscape
	public String getStatusCurrentLanguageId();

	@AutoEscape
	public String getStatusCurrentValue();

	/**
	 * Returns a map of the locales and localized statuses of this workflow instance.
	 *
	 * @return the locales and localized statuses of this workflow instance
	 */
	public Map<Locale, String> getStatusMap();

	/**
	 * Sets the status of this workflow instance.
	 *
	 * @param status the status of this workflow instance
	 */
	public void setStatus(String status);

	/**
	 * Sets the localized status of this workflow instance in the language.
	 *
	 * @param status the localized status of this workflow instance
	 * @param locale the locale of the language
	 */
	public void setStatus(String status, Locale locale);

	/**
	 * Sets the localized status of this workflow instance in the language, and sets the default locale.
	 *
	 * @param status the localized status of this workflow instance
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setStatus(String status, Locale locale, Locale defaultLocale);

	public void setStatusCurrentLanguageId(String languageId);

	/**
	 * Sets the localized statuses of this workflow instance from the map of locales and localized statuses.
	 *
	 * @param statusMap the locales and localized statuses of this workflow instance
	 */
	public void setStatusMap(Map<Locale, String> statusMap);

	/**
	 * Sets the localized statuses of this workflow instance from the map of locales and localized statuses, and sets the default locale.
	 *
	 * @param statusMap the locales and localized statuses of this workflow instance
	 * @param defaultLocale the default locale
	 */
	public void setStatusMap(Map<Locale, String> statusMap, Locale defaultLocale);

	/**
	 * Returns the start time of this workflow instance.
	 *
	 * @return the start time of this workflow instance
	 */
	public Date getStartTime();

	/**
	 * Sets the start time of this workflow instance.
	 *
	 * @param startTime the start time of this workflow instance
	 */
	public void setStartTime(Date startTime);

	/**
	 * Returns the end time of this workflow instance.
	 *
	 * @return the end time of this workflow instance
	 */
	public Date getEndTime();

	/**
	 * Sets the end time of this workflow instance.
	 *
	 * @param endTime the end time of this workflow instance
	 */
	public void setEndTime(Date endTime);

	/**
	 * Returns the workflow ID of this workflow instance.
	 *
	 * @return the workflow ID of this workflow instance
	 */
	public long getWorkflowId();

	/**
	 * Sets the workflow ID of this workflow instance.
	 *
	 * @param workflowId the workflow ID of this workflow instance
	 */
	public void setWorkflowId(long workflowId);

	/**
	 * Returns the workflow u u i d of this workflow instance.
	 *
	 * @return the workflow u u i d of this workflow instance
	 */
	@AutoEscape
	public String getWorkflowUUID();

	/**
	 * Sets the workflow u u i d of this workflow instance.
	 *
	 * @param workflowUUID the workflow u u i d of this workflow instance
	 */
	public void setWorkflowUUID(String workflowUUID);

	/**
	 * Returns the screen logic of this workflow instance.
	 *
	 * @return the screen logic of this workflow instance
	 */
	@AutoEscape
	public String getScreenLogic();

	/**
	 * Sets the screen logic of this workflow instance.
	 *
	 * @param screenLogic the screen logic of this workflow instance
	 */
	public void setScreenLogic(String screenLogic);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(
		org.kisti.edison.model.WorkflowInstance workflowInstance);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.model.WorkflowInstance> toCacheModel();

	@Override
	public org.kisti.edison.model.WorkflowInstance toEscapedModel();

	@Override
	public org.kisti.edison.model.WorkflowInstance toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}