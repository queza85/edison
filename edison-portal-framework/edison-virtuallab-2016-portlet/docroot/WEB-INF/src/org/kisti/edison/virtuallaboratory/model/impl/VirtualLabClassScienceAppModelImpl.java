/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.virtuallaboratory.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp;
import org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceAppModel;
import org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceAppSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VirtualLabClassScienceApp service. Represents a row in the &quot;EDVIR_VirtualLabClassScienceApp&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceAppModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VirtualLabClassScienceAppImpl}.
 * </p>
 *
 * @author EDISON
 * @see VirtualLabClassScienceAppImpl
 * @see org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp
 * @see org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceAppModel
 * @generated
 */
@JSON(strict = true)
public class VirtualLabClassScienceAppModelImpl extends BaseModelImpl<VirtualLabClassScienceApp>
	implements VirtualLabClassScienceAppModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a virtual lab class science app model instance should use the {@link org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp} interface instead.
	 */
	public static final String TABLE_NAME = "EDVIR_VirtualLabClassScienceApp";
	public static final Object[][] TABLE_COLUMNS = {
			{ "scienceAppSeqNo", Types.BIGINT },
			{ "scienceAppId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table EDVIR_VirtualLabClassScienceApp (scienceAppSeqNo LONG not null primary key,scienceAppId LONG,createDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table EDVIR_VirtualLabClassScienceApp";
	public static final String ORDER_BY_JPQL = " ORDER BY virtualLabClassScienceApp.scienceAppSeqNo ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EDVIR_VirtualLabClassScienceApp.scienceAppSeqNo ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VirtualLabClassScienceApp toModel(
		VirtualLabClassScienceAppSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VirtualLabClassScienceApp model = new VirtualLabClassScienceAppImpl();

		model.setScienceAppSeqNo(soapModel.getScienceAppSeqNo());
		model.setScienceAppId(soapModel.getScienceAppId());
		model.setCreateDate(soapModel.getCreateDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VirtualLabClassScienceApp> toModels(
		VirtualLabClassScienceAppSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VirtualLabClassScienceApp> models = new ArrayList<VirtualLabClassScienceApp>(soapModels.length);

		for (VirtualLabClassScienceAppSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_EDVIR_VIRTUALLABCLASSES_VIRTUALLABCLASSSCIENCEAPPS_NAME =
		"EDVIR_VirtualLabClasses_VirtualLabClassScienceApps";
	public static final Object[][] MAPPING_TABLE_EDVIR_VIRTUALLABCLASSES_VIRTUALLABCLASSSCIENCEAPPS_COLUMNS =
		{
			{ "classId", Types.BIGINT },
			{ "scienceAppSeqNo", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_EDVIR_VIRTUALLABCLASSES_VIRTUALLABCLASSSCIENCEAPPS_SQL_CREATE =
		"create table EDVIR_VirtualLabClasses_VirtualLabClassScienceApps (classId LONG not null,scienceAppSeqNo LONG not null,primary key (classId, scienceAppSeqNo))";
	public static final boolean FINDER_CACHE_ENABLED_EDVIR_VIRTUALLABCLASSES_VIRTUALLABCLASSSCIENCEAPPS =
		GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.EDVIR_VirtualLabClasses_VirtualLabClassScienceApps"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp"));

	public VirtualLabClassScienceAppModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _scienceAppSeqNo;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setScienceAppSeqNo(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _scienceAppSeqNo;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VirtualLabClassScienceApp.class;
	}

	@Override
	public String getModelClassName() {
		return VirtualLabClassScienceApp.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("scienceAppSeqNo", getScienceAppSeqNo());
		attributes.put("scienceAppId", getScienceAppId());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long scienceAppSeqNo = (Long)attributes.get("scienceAppSeqNo");

		if (scienceAppSeqNo != null) {
			setScienceAppSeqNo(scienceAppSeqNo);
		}

		Long scienceAppId = (Long)attributes.get("scienceAppId");

		if (scienceAppId != null) {
			setScienceAppId(scienceAppId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@JSON
	@Override
	public long getScienceAppSeqNo() {
		return _scienceAppSeqNo;
	}

	@Override
	public void setScienceAppSeqNo(long scienceAppSeqNo) {
		_scienceAppSeqNo = scienceAppSeqNo;
	}

	@JSON
	@Override
	public long getScienceAppId() {
		return _scienceAppId;
	}

	@Override
	public void setScienceAppId(long scienceAppId) {
		_scienceAppId = scienceAppId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VirtualLabClassScienceApp.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VirtualLabClassScienceApp toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VirtualLabClassScienceApp)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VirtualLabClassScienceAppImpl virtualLabClassScienceAppImpl = new VirtualLabClassScienceAppImpl();

		virtualLabClassScienceAppImpl.setScienceAppSeqNo(getScienceAppSeqNo());
		virtualLabClassScienceAppImpl.setScienceAppId(getScienceAppId());
		virtualLabClassScienceAppImpl.setCreateDate(getCreateDate());

		virtualLabClassScienceAppImpl.resetOriginalValues();

		return virtualLabClassScienceAppImpl;
	}

	@Override
	public int compareTo(VirtualLabClassScienceApp virtualLabClassScienceApp) {
		long primaryKey = virtualLabClassScienceApp.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VirtualLabClassScienceApp)) {
			return false;
		}

		VirtualLabClassScienceApp virtualLabClassScienceApp = (VirtualLabClassScienceApp)obj;

		long primaryKey = virtualLabClassScienceApp.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<VirtualLabClassScienceApp> toCacheModel() {
		VirtualLabClassScienceAppCacheModel virtualLabClassScienceAppCacheModel = new VirtualLabClassScienceAppCacheModel();

		virtualLabClassScienceAppCacheModel.scienceAppSeqNo = getScienceAppSeqNo();

		virtualLabClassScienceAppCacheModel.scienceAppId = getScienceAppId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			virtualLabClassScienceAppCacheModel.createDate = createDate.getTime();
		}
		else {
			virtualLabClassScienceAppCacheModel.createDate = Long.MIN_VALUE;
		}

		return virtualLabClassScienceAppCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{scienceAppSeqNo=");
		sb.append(getScienceAppSeqNo());
		sb.append(", scienceAppId=");
		sb.append(getScienceAppId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append(
			"org.kisti.edison.virtuallaboratory.model.VirtualLabClassScienceApp");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>scienceAppSeqNo</column-name><column-value><![CDATA[");
		sb.append(getScienceAppSeqNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scienceAppId</column-name><column-value><![CDATA[");
		sb.append(getScienceAppId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VirtualLabClassScienceApp.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VirtualLabClassScienceApp.class
		};
	private long _scienceAppSeqNo;
	private long _scienceAppId;
	private Date _createDate;
	private VirtualLabClassScienceApp _escapedModel;
}