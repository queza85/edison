/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.science.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.kisti.edison.science.service.persistence.DeveloperIpPK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DeveloperIp service. Represents a row in the &quot;EDAPP_DeveloperIp&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.science.model.impl.DeveloperIpModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.science.model.impl.DeveloperIpImpl}.
 * </p>
 *
 * @author EDISON
 * @see DeveloperIp
 * @see org.kisti.edison.science.model.impl.DeveloperIpImpl
 * @see org.kisti.edison.science.model.impl.DeveloperIpModelImpl
 * @generated
 */
public interface DeveloperIpModel extends BaseModel<DeveloperIp> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a developer ip model instance should use the {@link DeveloperIp} interface instead.
	 */

	/**
	 * Returns the primary key of this developer ip.
	 *
	 * @return the primary key of this developer ip
	 */
	public DeveloperIpPK getPrimaryKey();

	/**
	 * Sets the primary key of this developer ip.
	 *
	 * @param primaryKey the primary key of this developer ip
	 */
	public void setPrimaryKey(DeveloperIpPK primaryKey);

	/**
	 * Returns the ip seq of this developer ip.
	 *
	 * @return the ip seq of this developer ip
	 */
	public long getIpSeq();

	/**
	 * Sets the ip seq of this developer ip.
	 *
	 * @param ipSeq the ip seq of this developer ip
	 */
	public void setIpSeq(long ipSeq);

	/**
	 * Returns the user ID of this developer ip.
	 *
	 * @return the user ID of this developer ip
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this developer ip.
	 *
	 * @param userId the user ID of this developer ip
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this developer ip.
	 *
	 * @return the user uuid of this developer ip
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this developer ip.
	 *
	 * @param userUuid the user uuid of this developer ip
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the group ID of this developer ip.
	 *
	 * @return the group ID of this developer ip
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this developer ip.
	 *
	 * @param groupId the group ID of this developer ip
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the ip1 of this developer ip.
	 *
	 * @return the ip1 of this developer ip
	 */
	@AutoEscape
	public String getIp1();

	/**
	 * Sets the ip1 of this developer ip.
	 *
	 * @param ip1 the ip1 of this developer ip
	 */
	public void setIp1(String ip1);

	/**
	 * Returns the ip2 of this developer ip.
	 *
	 * @return the ip2 of this developer ip
	 */
	@AutoEscape
	public String getIp2();

	/**
	 * Sets the ip2 of this developer ip.
	 *
	 * @param ip2 the ip2 of this developer ip
	 */
	public void setIp2(String ip2);

	/**
	 * Returns the ip3 of this developer ip.
	 *
	 * @return the ip3 of this developer ip
	 */
	@AutoEscape
	public String getIp3();

	/**
	 * Sets the ip3 of this developer ip.
	 *
	 * @param ip3 the ip3 of this developer ip
	 */
	public void setIp3(String ip3);

	/**
	 * Returns the ip4 of this developer ip.
	 *
	 * @return the ip4 of this developer ip
	 */
	@AutoEscape
	public String getIp4();

	/**
	 * Sets the ip4 of this developer ip.
	 *
	 * @param ip4 the ip4 of this developer ip
	 */
	public void setIp4(String ip4);

	/**
	 * Returns the insert ID of this developer ip.
	 *
	 * @return the insert ID of this developer ip
	 */
	public long getInsertId();

	/**
	 * Sets the insert ID of this developer ip.
	 *
	 * @param insertId the insert ID of this developer ip
	 */
	public void setInsertId(long insertId);

	/**
	 * Returns the insert date of this developer ip.
	 *
	 * @return the insert date of this developer ip
	 */
	public Date getInsertDate();

	/**
	 * Sets the insert date of this developer ip.
	 *
	 * @param insertDate the insert date of this developer ip
	 */
	public void setInsertDate(Date insertDate);

	/**
	 * Returns the update ID of this developer ip.
	 *
	 * @return the update ID of this developer ip
	 */
	public long getUpdateId();

	/**
	 * Sets the update ID of this developer ip.
	 *
	 * @param updateId the update ID of this developer ip
	 */
	public void setUpdateId(long updateId);

	/**
	 * Returns the update date of this developer ip.
	 *
	 * @return the update date of this developer ip
	 */
	public Date getUpdateDate();

	/**
	 * Sets the update date of this developer ip.
	 *
	 * @param updateDate the update date of this developer ip
	 */
	public void setUpdateDate(Date updateDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(org.kisti.edison.science.model.DeveloperIp developerIp);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.science.model.DeveloperIp> toCacheModel();

	@Override
	public org.kisti.edison.science.model.DeveloperIp toEscapedModel();

	@Override
	public org.kisti.edison.science.model.DeveloperIp toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}