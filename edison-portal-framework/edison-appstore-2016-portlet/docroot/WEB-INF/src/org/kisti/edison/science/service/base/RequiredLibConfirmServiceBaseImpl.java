/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.science.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import org.kisti.edison.science.model.RequiredLibConfirm;
import org.kisti.edison.science.service.RequiredLibConfirmService;
import org.kisti.edison.science.service.persistence.CommonLibFinder;
import org.kisti.edison.science.service.persistence.CommonLibPersistence;
import org.kisti.edison.science.service.persistence.CommonModulePersistence;
import org.kisti.edison.science.service.persistence.DeveloperInfoFinder;
import org.kisti.edison.science.service.persistence.DeveloperInfoPersistence;
import org.kisti.edison.science.service.persistence.DeveloperIpPersistence;
import org.kisti.edison.science.service.persistence.DeveloperRequestPersistence;
import org.kisti.edison.science.service.persistence.PortTypeAnalyzerLinkFinder;
import org.kisti.edison.science.service.persistence.PortTypeAnalyzerLinkPersistence;
import org.kisti.edison.science.service.persistence.PortTypeEditorLinkFinder;
import org.kisti.edison.science.service.persistence.PortTypeEditorLinkPersistence;
import org.kisti.edison.science.service.persistence.PortTypeFinder;
import org.kisti.edison.science.service.persistence.PortTypeInputdeckFormPersistence;
import org.kisti.edison.science.service.persistence.PortTypePersistence;
import org.kisti.edison.science.service.persistence.RequiredLibConfirmPersistence;
import org.kisti.edison.science.service.persistence.RequiredLibFinder;
import org.kisti.edison.science.service.persistence.RequiredLibPersistence;
import org.kisti.edison.science.service.persistence.RequiredModulePersistence;
import org.kisti.edison.science.service.persistence.ScienceAppCategoryLinkPersistence;
import org.kisti.edison.science.service.persistence.ScienceAppDescriptionPersistence;
import org.kisti.edison.science.service.persistence.ScienceAppFavoritePersistence;
import org.kisti.edison.science.service.persistence.ScienceAppFinder;
import org.kisti.edison.science.service.persistence.ScienceAppInputPortsPersistence;
import org.kisti.edison.science.service.persistence.ScienceAppManagerFinder;
import org.kisti.edison.science.service.persistence.ScienceAppManagerPersistence;
import org.kisti.edison.science.service.persistence.ScienceAppOutputPortsPersistence;
import org.kisti.edison.science.service.persistence.ScienceAppPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the required lib confirm remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link org.kisti.edison.science.service.impl.RequiredLibConfirmServiceImpl}.
 * </p>
 *
 * @author EDISON
 * @see org.kisti.edison.science.service.impl.RequiredLibConfirmServiceImpl
 * @see org.kisti.edison.science.service.RequiredLibConfirmServiceUtil
 * @generated
 */
public abstract class RequiredLibConfirmServiceBaseImpl extends BaseServiceImpl
	implements RequiredLibConfirmService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link org.kisti.edison.science.service.RequiredLibConfirmServiceUtil} to access the required lib confirm remote service.
	 */

	/**
	 * Returns the common lib local service.
	 *
	 * @return the common lib local service
	 */
	public org.kisti.edison.science.service.CommonLibLocalService getCommonLibLocalService() {
		return commonLibLocalService;
	}

	/**
	 * Sets the common lib local service.
	 *
	 * @param commonLibLocalService the common lib local service
	 */
	public void setCommonLibLocalService(
		org.kisti.edison.science.service.CommonLibLocalService commonLibLocalService) {
		this.commonLibLocalService = commonLibLocalService;
	}

	/**
	 * Returns the common lib remote service.
	 *
	 * @return the common lib remote service
	 */
	public org.kisti.edison.science.service.CommonLibService getCommonLibService() {
		return commonLibService;
	}

	/**
	 * Sets the common lib remote service.
	 *
	 * @param commonLibService the common lib remote service
	 */
	public void setCommonLibService(
		org.kisti.edison.science.service.CommonLibService commonLibService) {
		this.commonLibService = commonLibService;
	}

	/**
	 * Returns the common lib persistence.
	 *
	 * @return the common lib persistence
	 */
	public CommonLibPersistence getCommonLibPersistence() {
		return commonLibPersistence;
	}

	/**
	 * Sets the common lib persistence.
	 *
	 * @param commonLibPersistence the common lib persistence
	 */
	public void setCommonLibPersistence(
		CommonLibPersistence commonLibPersistence) {
		this.commonLibPersistence = commonLibPersistence;
	}

	/**
	 * Returns the common lib finder.
	 *
	 * @return the common lib finder
	 */
	public CommonLibFinder getCommonLibFinder() {
		return commonLibFinder;
	}

	/**
	 * Sets the common lib finder.
	 *
	 * @param commonLibFinder the common lib finder
	 */
	public void setCommonLibFinder(CommonLibFinder commonLibFinder) {
		this.commonLibFinder = commonLibFinder;
	}

	/**
	 * Returns the common module local service.
	 *
	 * @return the common module local service
	 */
	public org.kisti.edison.science.service.CommonModuleLocalService getCommonModuleLocalService() {
		return commonModuleLocalService;
	}

	/**
	 * Sets the common module local service.
	 *
	 * @param commonModuleLocalService the common module local service
	 */
	public void setCommonModuleLocalService(
		org.kisti.edison.science.service.CommonModuleLocalService commonModuleLocalService) {
		this.commonModuleLocalService = commonModuleLocalService;
	}

	/**
	 * Returns the common module remote service.
	 *
	 * @return the common module remote service
	 */
	public org.kisti.edison.science.service.CommonModuleService getCommonModuleService() {
		return commonModuleService;
	}

	/**
	 * Sets the common module remote service.
	 *
	 * @param commonModuleService the common module remote service
	 */
	public void setCommonModuleService(
		org.kisti.edison.science.service.CommonModuleService commonModuleService) {
		this.commonModuleService = commonModuleService;
	}

	/**
	 * Returns the common module persistence.
	 *
	 * @return the common module persistence
	 */
	public CommonModulePersistence getCommonModulePersistence() {
		return commonModulePersistence;
	}

	/**
	 * Sets the common module persistence.
	 *
	 * @param commonModulePersistence the common module persistence
	 */
	public void setCommonModulePersistence(
		CommonModulePersistence commonModulePersistence) {
		this.commonModulePersistence = commonModulePersistence;
	}

	/**
	 * Returns the developer info local service.
	 *
	 * @return the developer info local service
	 */
	public org.kisti.edison.science.service.DeveloperInfoLocalService getDeveloperInfoLocalService() {
		return developerInfoLocalService;
	}

	/**
	 * Sets the developer info local service.
	 *
	 * @param developerInfoLocalService the developer info local service
	 */
	public void setDeveloperInfoLocalService(
		org.kisti.edison.science.service.DeveloperInfoLocalService developerInfoLocalService) {
		this.developerInfoLocalService = developerInfoLocalService;
	}

	/**
	 * Returns the developer info remote service.
	 *
	 * @return the developer info remote service
	 */
	public org.kisti.edison.science.service.DeveloperInfoService getDeveloperInfoService() {
		return developerInfoService;
	}

	/**
	 * Sets the developer info remote service.
	 *
	 * @param developerInfoService the developer info remote service
	 */
	public void setDeveloperInfoService(
		org.kisti.edison.science.service.DeveloperInfoService developerInfoService) {
		this.developerInfoService = developerInfoService;
	}

	/**
	 * Returns the developer info persistence.
	 *
	 * @return the developer info persistence
	 */
	public DeveloperInfoPersistence getDeveloperInfoPersistence() {
		return developerInfoPersistence;
	}

	/**
	 * Sets the developer info persistence.
	 *
	 * @param developerInfoPersistence the developer info persistence
	 */
	public void setDeveloperInfoPersistence(
		DeveloperInfoPersistence developerInfoPersistence) {
		this.developerInfoPersistence = developerInfoPersistence;
	}

	/**
	 * Returns the developer info finder.
	 *
	 * @return the developer info finder
	 */
	public DeveloperInfoFinder getDeveloperInfoFinder() {
		return developerInfoFinder;
	}

	/**
	 * Sets the developer info finder.
	 *
	 * @param developerInfoFinder the developer info finder
	 */
	public void setDeveloperInfoFinder(DeveloperInfoFinder developerInfoFinder) {
		this.developerInfoFinder = developerInfoFinder;
	}

	/**
	 * Returns the developer ip local service.
	 *
	 * @return the developer ip local service
	 */
	public org.kisti.edison.science.service.DeveloperIpLocalService getDeveloperIpLocalService() {
		return developerIpLocalService;
	}

	/**
	 * Sets the developer ip local service.
	 *
	 * @param developerIpLocalService the developer ip local service
	 */
	public void setDeveloperIpLocalService(
		org.kisti.edison.science.service.DeveloperIpLocalService developerIpLocalService) {
		this.developerIpLocalService = developerIpLocalService;
	}

	/**
	 * Returns the developer ip remote service.
	 *
	 * @return the developer ip remote service
	 */
	public org.kisti.edison.science.service.DeveloperIpService getDeveloperIpService() {
		return developerIpService;
	}

	/**
	 * Sets the developer ip remote service.
	 *
	 * @param developerIpService the developer ip remote service
	 */
	public void setDeveloperIpService(
		org.kisti.edison.science.service.DeveloperIpService developerIpService) {
		this.developerIpService = developerIpService;
	}

	/**
	 * Returns the developer ip persistence.
	 *
	 * @return the developer ip persistence
	 */
	public DeveloperIpPersistence getDeveloperIpPersistence() {
		return developerIpPersistence;
	}

	/**
	 * Sets the developer ip persistence.
	 *
	 * @param developerIpPersistence the developer ip persistence
	 */
	public void setDeveloperIpPersistence(
		DeveloperIpPersistence developerIpPersistence) {
		this.developerIpPersistence = developerIpPersistence;
	}

	/**
	 * Returns the developer request local service.
	 *
	 * @return the developer request local service
	 */
	public org.kisti.edison.science.service.DeveloperRequestLocalService getDeveloperRequestLocalService() {
		return developerRequestLocalService;
	}

	/**
	 * Sets the developer request local service.
	 *
	 * @param developerRequestLocalService the developer request local service
	 */
	public void setDeveloperRequestLocalService(
		org.kisti.edison.science.service.DeveloperRequestLocalService developerRequestLocalService) {
		this.developerRequestLocalService = developerRequestLocalService;
	}

	/**
	 * Returns the developer request remote service.
	 *
	 * @return the developer request remote service
	 */
	public org.kisti.edison.science.service.DeveloperRequestService getDeveloperRequestService() {
		return developerRequestService;
	}

	/**
	 * Sets the developer request remote service.
	 *
	 * @param developerRequestService the developer request remote service
	 */
	public void setDeveloperRequestService(
		org.kisti.edison.science.service.DeveloperRequestService developerRequestService) {
		this.developerRequestService = developerRequestService;
	}

	/**
	 * Returns the developer request persistence.
	 *
	 * @return the developer request persistence
	 */
	public DeveloperRequestPersistence getDeveloperRequestPersistence() {
		return developerRequestPersistence;
	}

	/**
	 * Sets the developer request persistence.
	 *
	 * @param developerRequestPersistence the developer request persistence
	 */
	public void setDeveloperRequestPersistence(
		DeveloperRequestPersistence developerRequestPersistence) {
		this.developerRequestPersistence = developerRequestPersistence;
	}

	/**
	 * Returns the port type local service.
	 *
	 * @return the port type local service
	 */
	public org.kisti.edison.science.service.PortTypeLocalService getPortTypeLocalService() {
		return portTypeLocalService;
	}

	/**
	 * Sets the port type local service.
	 *
	 * @param portTypeLocalService the port type local service
	 */
	public void setPortTypeLocalService(
		org.kisti.edison.science.service.PortTypeLocalService portTypeLocalService) {
		this.portTypeLocalService = portTypeLocalService;
	}

	/**
	 * Returns the port type remote service.
	 *
	 * @return the port type remote service
	 */
	public org.kisti.edison.science.service.PortTypeService getPortTypeService() {
		return portTypeService;
	}

	/**
	 * Sets the port type remote service.
	 *
	 * @param portTypeService the port type remote service
	 */
	public void setPortTypeService(
		org.kisti.edison.science.service.PortTypeService portTypeService) {
		this.portTypeService = portTypeService;
	}

	/**
	 * Returns the port type persistence.
	 *
	 * @return the port type persistence
	 */
	public PortTypePersistence getPortTypePersistence() {
		return portTypePersistence;
	}

	/**
	 * Sets the port type persistence.
	 *
	 * @param portTypePersistence the port type persistence
	 */
	public void setPortTypePersistence(PortTypePersistence portTypePersistence) {
		this.portTypePersistence = portTypePersistence;
	}

	/**
	 * Returns the port type finder.
	 *
	 * @return the port type finder
	 */
	public PortTypeFinder getPortTypeFinder() {
		return portTypeFinder;
	}

	/**
	 * Sets the port type finder.
	 *
	 * @param portTypeFinder the port type finder
	 */
	public void setPortTypeFinder(PortTypeFinder portTypeFinder) {
		this.portTypeFinder = portTypeFinder;
	}

	/**
	 * Returns the port type analyzer link local service.
	 *
	 * @return the port type analyzer link local service
	 */
	public org.kisti.edison.science.service.PortTypeAnalyzerLinkLocalService getPortTypeAnalyzerLinkLocalService() {
		return portTypeAnalyzerLinkLocalService;
	}

	/**
	 * Sets the port type analyzer link local service.
	 *
	 * @param portTypeAnalyzerLinkLocalService the port type analyzer link local service
	 */
	public void setPortTypeAnalyzerLinkLocalService(
		org.kisti.edison.science.service.PortTypeAnalyzerLinkLocalService portTypeAnalyzerLinkLocalService) {
		this.portTypeAnalyzerLinkLocalService = portTypeAnalyzerLinkLocalService;
	}

	/**
	 * Returns the port type analyzer link remote service.
	 *
	 * @return the port type analyzer link remote service
	 */
	public org.kisti.edison.science.service.PortTypeAnalyzerLinkService getPortTypeAnalyzerLinkService() {
		return portTypeAnalyzerLinkService;
	}

	/**
	 * Sets the port type analyzer link remote service.
	 *
	 * @param portTypeAnalyzerLinkService the port type analyzer link remote service
	 */
	public void setPortTypeAnalyzerLinkService(
		org.kisti.edison.science.service.PortTypeAnalyzerLinkService portTypeAnalyzerLinkService) {
		this.portTypeAnalyzerLinkService = portTypeAnalyzerLinkService;
	}

	/**
	 * Returns the port type analyzer link persistence.
	 *
	 * @return the port type analyzer link persistence
	 */
	public PortTypeAnalyzerLinkPersistence getPortTypeAnalyzerLinkPersistence() {
		return portTypeAnalyzerLinkPersistence;
	}

	/**
	 * Sets the port type analyzer link persistence.
	 *
	 * @param portTypeAnalyzerLinkPersistence the port type analyzer link persistence
	 */
	public void setPortTypeAnalyzerLinkPersistence(
		PortTypeAnalyzerLinkPersistence portTypeAnalyzerLinkPersistence) {
		this.portTypeAnalyzerLinkPersistence = portTypeAnalyzerLinkPersistence;
	}

	/**
	 * Returns the port type analyzer link finder.
	 *
	 * @return the port type analyzer link finder
	 */
	public PortTypeAnalyzerLinkFinder getPortTypeAnalyzerLinkFinder() {
		return portTypeAnalyzerLinkFinder;
	}

	/**
	 * Sets the port type analyzer link finder.
	 *
	 * @param portTypeAnalyzerLinkFinder the port type analyzer link finder
	 */
	public void setPortTypeAnalyzerLinkFinder(
		PortTypeAnalyzerLinkFinder portTypeAnalyzerLinkFinder) {
		this.portTypeAnalyzerLinkFinder = portTypeAnalyzerLinkFinder;
	}

	/**
	 * Returns the port type editor link local service.
	 *
	 * @return the port type editor link local service
	 */
	public org.kisti.edison.science.service.PortTypeEditorLinkLocalService getPortTypeEditorLinkLocalService() {
		return portTypeEditorLinkLocalService;
	}

	/**
	 * Sets the port type editor link local service.
	 *
	 * @param portTypeEditorLinkLocalService the port type editor link local service
	 */
	public void setPortTypeEditorLinkLocalService(
		org.kisti.edison.science.service.PortTypeEditorLinkLocalService portTypeEditorLinkLocalService) {
		this.portTypeEditorLinkLocalService = portTypeEditorLinkLocalService;
	}

	/**
	 * Returns the port type editor link remote service.
	 *
	 * @return the port type editor link remote service
	 */
	public org.kisti.edison.science.service.PortTypeEditorLinkService getPortTypeEditorLinkService() {
		return portTypeEditorLinkService;
	}

	/**
	 * Sets the port type editor link remote service.
	 *
	 * @param portTypeEditorLinkService the port type editor link remote service
	 */
	public void setPortTypeEditorLinkService(
		org.kisti.edison.science.service.PortTypeEditorLinkService portTypeEditorLinkService) {
		this.portTypeEditorLinkService = portTypeEditorLinkService;
	}

	/**
	 * Returns the port type editor link persistence.
	 *
	 * @return the port type editor link persistence
	 */
	public PortTypeEditorLinkPersistence getPortTypeEditorLinkPersistence() {
		return portTypeEditorLinkPersistence;
	}

	/**
	 * Sets the port type editor link persistence.
	 *
	 * @param portTypeEditorLinkPersistence the port type editor link persistence
	 */
	public void setPortTypeEditorLinkPersistence(
		PortTypeEditorLinkPersistence portTypeEditorLinkPersistence) {
		this.portTypeEditorLinkPersistence = portTypeEditorLinkPersistence;
	}

	/**
	 * Returns the port type editor link finder.
	 *
	 * @return the port type editor link finder
	 */
	public PortTypeEditorLinkFinder getPortTypeEditorLinkFinder() {
		return portTypeEditorLinkFinder;
	}

	/**
	 * Sets the port type editor link finder.
	 *
	 * @param portTypeEditorLinkFinder the port type editor link finder
	 */
	public void setPortTypeEditorLinkFinder(
		PortTypeEditorLinkFinder portTypeEditorLinkFinder) {
		this.portTypeEditorLinkFinder = portTypeEditorLinkFinder;
	}

	/**
	 * Returns the port type inputdeck form local service.
	 *
	 * @return the port type inputdeck form local service
	 */
	public org.kisti.edison.science.service.PortTypeInputdeckFormLocalService getPortTypeInputdeckFormLocalService() {
		return portTypeInputdeckFormLocalService;
	}

	/**
	 * Sets the port type inputdeck form local service.
	 *
	 * @param portTypeInputdeckFormLocalService the port type inputdeck form local service
	 */
	public void setPortTypeInputdeckFormLocalService(
		org.kisti.edison.science.service.PortTypeInputdeckFormLocalService portTypeInputdeckFormLocalService) {
		this.portTypeInputdeckFormLocalService = portTypeInputdeckFormLocalService;
	}

	/**
	 * Returns the port type inputdeck form persistence.
	 *
	 * @return the port type inputdeck form persistence
	 */
	public PortTypeInputdeckFormPersistence getPortTypeInputdeckFormPersistence() {
		return portTypeInputdeckFormPersistence;
	}

	/**
	 * Sets the port type inputdeck form persistence.
	 *
	 * @param portTypeInputdeckFormPersistence the port type inputdeck form persistence
	 */
	public void setPortTypeInputdeckFormPersistence(
		PortTypeInputdeckFormPersistence portTypeInputdeckFormPersistence) {
		this.portTypeInputdeckFormPersistence = portTypeInputdeckFormPersistence;
	}

	/**
	 * Returns the required lib local service.
	 *
	 * @return the required lib local service
	 */
	public org.kisti.edison.science.service.RequiredLibLocalService getRequiredLibLocalService() {
		return requiredLibLocalService;
	}

	/**
	 * Sets the required lib local service.
	 *
	 * @param requiredLibLocalService the required lib local service
	 */
	public void setRequiredLibLocalService(
		org.kisti.edison.science.service.RequiredLibLocalService requiredLibLocalService) {
		this.requiredLibLocalService = requiredLibLocalService;
	}

	/**
	 * Returns the required lib remote service.
	 *
	 * @return the required lib remote service
	 */
	public org.kisti.edison.science.service.RequiredLibService getRequiredLibService() {
		return requiredLibService;
	}

	/**
	 * Sets the required lib remote service.
	 *
	 * @param requiredLibService the required lib remote service
	 */
	public void setRequiredLibService(
		org.kisti.edison.science.service.RequiredLibService requiredLibService) {
		this.requiredLibService = requiredLibService;
	}

	/**
	 * Returns the required lib persistence.
	 *
	 * @return the required lib persistence
	 */
	public RequiredLibPersistence getRequiredLibPersistence() {
		return requiredLibPersistence;
	}

	/**
	 * Sets the required lib persistence.
	 *
	 * @param requiredLibPersistence the required lib persistence
	 */
	public void setRequiredLibPersistence(
		RequiredLibPersistence requiredLibPersistence) {
		this.requiredLibPersistence = requiredLibPersistence;
	}

	/**
	 * Returns the required lib finder.
	 *
	 * @return the required lib finder
	 */
	public RequiredLibFinder getRequiredLibFinder() {
		return requiredLibFinder;
	}

	/**
	 * Sets the required lib finder.
	 *
	 * @param requiredLibFinder the required lib finder
	 */
	public void setRequiredLibFinder(RequiredLibFinder requiredLibFinder) {
		this.requiredLibFinder = requiredLibFinder;
	}

	/**
	 * Returns the required lib confirm local service.
	 *
	 * @return the required lib confirm local service
	 */
	public org.kisti.edison.science.service.RequiredLibConfirmLocalService getRequiredLibConfirmLocalService() {
		return requiredLibConfirmLocalService;
	}

	/**
	 * Sets the required lib confirm local service.
	 *
	 * @param requiredLibConfirmLocalService the required lib confirm local service
	 */
	public void setRequiredLibConfirmLocalService(
		org.kisti.edison.science.service.RequiredLibConfirmLocalService requiredLibConfirmLocalService) {
		this.requiredLibConfirmLocalService = requiredLibConfirmLocalService;
	}

	/**
	 * Returns the required lib confirm remote service.
	 *
	 * @return the required lib confirm remote service
	 */
	public org.kisti.edison.science.service.RequiredLibConfirmService getRequiredLibConfirmService() {
		return requiredLibConfirmService;
	}

	/**
	 * Sets the required lib confirm remote service.
	 *
	 * @param requiredLibConfirmService the required lib confirm remote service
	 */
	public void setRequiredLibConfirmService(
		org.kisti.edison.science.service.RequiredLibConfirmService requiredLibConfirmService) {
		this.requiredLibConfirmService = requiredLibConfirmService;
	}

	/**
	 * Returns the required lib confirm persistence.
	 *
	 * @return the required lib confirm persistence
	 */
	public RequiredLibConfirmPersistence getRequiredLibConfirmPersistence() {
		return requiredLibConfirmPersistence;
	}

	/**
	 * Sets the required lib confirm persistence.
	 *
	 * @param requiredLibConfirmPersistence the required lib confirm persistence
	 */
	public void setRequiredLibConfirmPersistence(
		RequiredLibConfirmPersistence requiredLibConfirmPersistence) {
		this.requiredLibConfirmPersistence = requiredLibConfirmPersistence;
	}

	/**
	 * Returns the required module local service.
	 *
	 * @return the required module local service
	 */
	public org.kisti.edison.science.service.RequiredModuleLocalService getRequiredModuleLocalService() {
		return requiredModuleLocalService;
	}

	/**
	 * Sets the required module local service.
	 *
	 * @param requiredModuleLocalService the required module local service
	 */
	public void setRequiredModuleLocalService(
		org.kisti.edison.science.service.RequiredModuleLocalService requiredModuleLocalService) {
		this.requiredModuleLocalService = requiredModuleLocalService;
	}

	/**
	 * Returns the required module remote service.
	 *
	 * @return the required module remote service
	 */
	public org.kisti.edison.science.service.RequiredModuleService getRequiredModuleService() {
		return requiredModuleService;
	}

	/**
	 * Sets the required module remote service.
	 *
	 * @param requiredModuleService the required module remote service
	 */
	public void setRequiredModuleService(
		org.kisti.edison.science.service.RequiredModuleService requiredModuleService) {
		this.requiredModuleService = requiredModuleService;
	}

	/**
	 * Returns the required module persistence.
	 *
	 * @return the required module persistence
	 */
	public RequiredModulePersistence getRequiredModulePersistence() {
		return requiredModulePersistence;
	}

	/**
	 * Sets the required module persistence.
	 *
	 * @param requiredModulePersistence the required module persistence
	 */
	public void setRequiredModulePersistence(
		RequiredModulePersistence requiredModulePersistence) {
		this.requiredModulePersistence = requiredModulePersistence;
	}

	/**
	 * Returns the science app local service.
	 *
	 * @return the science app local service
	 */
	public org.kisti.edison.science.service.ScienceAppLocalService getScienceAppLocalService() {
		return scienceAppLocalService;
	}

	/**
	 * Sets the science app local service.
	 *
	 * @param scienceAppLocalService the science app local service
	 */
	public void setScienceAppLocalService(
		org.kisti.edison.science.service.ScienceAppLocalService scienceAppLocalService) {
		this.scienceAppLocalService = scienceAppLocalService;
	}

	/**
	 * Returns the science app remote service.
	 *
	 * @return the science app remote service
	 */
	public org.kisti.edison.science.service.ScienceAppService getScienceAppService() {
		return scienceAppService;
	}

	/**
	 * Sets the science app remote service.
	 *
	 * @param scienceAppService the science app remote service
	 */
	public void setScienceAppService(
		org.kisti.edison.science.service.ScienceAppService scienceAppService) {
		this.scienceAppService = scienceAppService;
	}

	/**
	 * Returns the science app persistence.
	 *
	 * @return the science app persistence
	 */
	public ScienceAppPersistence getScienceAppPersistence() {
		return scienceAppPersistence;
	}

	/**
	 * Sets the science app persistence.
	 *
	 * @param scienceAppPersistence the science app persistence
	 */
	public void setScienceAppPersistence(
		ScienceAppPersistence scienceAppPersistence) {
		this.scienceAppPersistence = scienceAppPersistence;
	}

	/**
	 * Returns the science app finder.
	 *
	 * @return the science app finder
	 */
	public ScienceAppFinder getScienceAppFinder() {
		return scienceAppFinder;
	}

	/**
	 * Sets the science app finder.
	 *
	 * @param scienceAppFinder the science app finder
	 */
	public void setScienceAppFinder(ScienceAppFinder scienceAppFinder) {
		this.scienceAppFinder = scienceAppFinder;
	}

	/**
	 * Returns the science app category link local service.
	 *
	 * @return the science app category link local service
	 */
	public org.kisti.edison.science.service.ScienceAppCategoryLinkLocalService getScienceAppCategoryLinkLocalService() {
		return scienceAppCategoryLinkLocalService;
	}

	/**
	 * Sets the science app category link local service.
	 *
	 * @param scienceAppCategoryLinkLocalService the science app category link local service
	 */
	public void setScienceAppCategoryLinkLocalService(
		org.kisti.edison.science.service.ScienceAppCategoryLinkLocalService scienceAppCategoryLinkLocalService) {
		this.scienceAppCategoryLinkLocalService = scienceAppCategoryLinkLocalService;
	}

	/**
	 * Returns the science app category link remote service.
	 *
	 * @return the science app category link remote service
	 */
	public org.kisti.edison.science.service.ScienceAppCategoryLinkService getScienceAppCategoryLinkService() {
		return scienceAppCategoryLinkService;
	}

	/**
	 * Sets the science app category link remote service.
	 *
	 * @param scienceAppCategoryLinkService the science app category link remote service
	 */
	public void setScienceAppCategoryLinkService(
		org.kisti.edison.science.service.ScienceAppCategoryLinkService scienceAppCategoryLinkService) {
		this.scienceAppCategoryLinkService = scienceAppCategoryLinkService;
	}

	/**
	 * Returns the science app category link persistence.
	 *
	 * @return the science app category link persistence
	 */
	public ScienceAppCategoryLinkPersistence getScienceAppCategoryLinkPersistence() {
		return scienceAppCategoryLinkPersistence;
	}

	/**
	 * Sets the science app category link persistence.
	 *
	 * @param scienceAppCategoryLinkPersistence the science app category link persistence
	 */
	public void setScienceAppCategoryLinkPersistence(
		ScienceAppCategoryLinkPersistence scienceAppCategoryLinkPersistence) {
		this.scienceAppCategoryLinkPersistence = scienceAppCategoryLinkPersistence;
	}

	/**
	 * Returns the science app description local service.
	 *
	 * @return the science app description local service
	 */
	public org.kisti.edison.science.service.ScienceAppDescriptionLocalService getScienceAppDescriptionLocalService() {
		return scienceAppDescriptionLocalService;
	}

	/**
	 * Sets the science app description local service.
	 *
	 * @param scienceAppDescriptionLocalService the science app description local service
	 */
	public void setScienceAppDescriptionLocalService(
		org.kisti.edison.science.service.ScienceAppDescriptionLocalService scienceAppDescriptionLocalService) {
		this.scienceAppDescriptionLocalService = scienceAppDescriptionLocalService;
	}

	/**
	 * Returns the science app description remote service.
	 *
	 * @return the science app description remote service
	 */
	public org.kisti.edison.science.service.ScienceAppDescriptionService getScienceAppDescriptionService() {
		return scienceAppDescriptionService;
	}

	/**
	 * Sets the science app description remote service.
	 *
	 * @param scienceAppDescriptionService the science app description remote service
	 */
	public void setScienceAppDescriptionService(
		org.kisti.edison.science.service.ScienceAppDescriptionService scienceAppDescriptionService) {
		this.scienceAppDescriptionService = scienceAppDescriptionService;
	}

	/**
	 * Returns the science app description persistence.
	 *
	 * @return the science app description persistence
	 */
	public ScienceAppDescriptionPersistence getScienceAppDescriptionPersistence() {
		return scienceAppDescriptionPersistence;
	}

	/**
	 * Sets the science app description persistence.
	 *
	 * @param scienceAppDescriptionPersistence the science app description persistence
	 */
	public void setScienceAppDescriptionPersistence(
		ScienceAppDescriptionPersistence scienceAppDescriptionPersistence) {
		this.scienceAppDescriptionPersistence = scienceAppDescriptionPersistence;
	}

	/**
	 * Returns the science app favorite local service.
	 *
	 * @return the science app favorite local service
	 */
	public org.kisti.edison.science.service.ScienceAppFavoriteLocalService getScienceAppFavoriteLocalService() {
		return scienceAppFavoriteLocalService;
	}

	/**
	 * Sets the science app favorite local service.
	 *
	 * @param scienceAppFavoriteLocalService the science app favorite local service
	 */
	public void setScienceAppFavoriteLocalService(
		org.kisti.edison.science.service.ScienceAppFavoriteLocalService scienceAppFavoriteLocalService) {
		this.scienceAppFavoriteLocalService = scienceAppFavoriteLocalService;
	}

	/**
	 * Returns the science app favorite remote service.
	 *
	 * @return the science app favorite remote service
	 */
	public org.kisti.edison.science.service.ScienceAppFavoriteService getScienceAppFavoriteService() {
		return scienceAppFavoriteService;
	}

	/**
	 * Sets the science app favorite remote service.
	 *
	 * @param scienceAppFavoriteService the science app favorite remote service
	 */
	public void setScienceAppFavoriteService(
		org.kisti.edison.science.service.ScienceAppFavoriteService scienceAppFavoriteService) {
		this.scienceAppFavoriteService = scienceAppFavoriteService;
	}

	/**
	 * Returns the science app favorite persistence.
	 *
	 * @return the science app favorite persistence
	 */
	public ScienceAppFavoritePersistence getScienceAppFavoritePersistence() {
		return scienceAppFavoritePersistence;
	}

	/**
	 * Sets the science app favorite persistence.
	 *
	 * @param scienceAppFavoritePersistence the science app favorite persistence
	 */
	public void setScienceAppFavoritePersistence(
		ScienceAppFavoritePersistence scienceAppFavoritePersistence) {
		this.scienceAppFavoritePersistence = scienceAppFavoritePersistence;
	}

	/**
	 * Returns the science app input ports local service.
	 *
	 * @return the science app input ports local service
	 */
	public org.kisti.edison.science.service.ScienceAppInputPortsLocalService getScienceAppInputPortsLocalService() {
		return scienceAppInputPortsLocalService;
	}

	/**
	 * Sets the science app input ports local service.
	 *
	 * @param scienceAppInputPortsLocalService the science app input ports local service
	 */
	public void setScienceAppInputPortsLocalService(
		org.kisti.edison.science.service.ScienceAppInputPortsLocalService scienceAppInputPortsLocalService) {
		this.scienceAppInputPortsLocalService = scienceAppInputPortsLocalService;
	}

	/**
	 * Returns the science app input ports persistence.
	 *
	 * @return the science app input ports persistence
	 */
	public ScienceAppInputPortsPersistence getScienceAppInputPortsPersistence() {
		return scienceAppInputPortsPersistence;
	}

	/**
	 * Sets the science app input ports persistence.
	 *
	 * @param scienceAppInputPortsPersistence the science app input ports persistence
	 */
	public void setScienceAppInputPortsPersistence(
		ScienceAppInputPortsPersistence scienceAppInputPortsPersistence) {
		this.scienceAppInputPortsPersistence = scienceAppInputPortsPersistence;
	}

	/**
	 * Returns the science app manager local service.
	 *
	 * @return the science app manager local service
	 */
	public org.kisti.edison.science.service.ScienceAppManagerLocalService getScienceAppManagerLocalService() {
		return scienceAppManagerLocalService;
	}

	/**
	 * Sets the science app manager local service.
	 *
	 * @param scienceAppManagerLocalService the science app manager local service
	 */
	public void setScienceAppManagerLocalService(
		org.kisti.edison.science.service.ScienceAppManagerLocalService scienceAppManagerLocalService) {
		this.scienceAppManagerLocalService = scienceAppManagerLocalService;
	}

	/**
	 * Returns the science app manager remote service.
	 *
	 * @return the science app manager remote service
	 */
	public org.kisti.edison.science.service.ScienceAppManagerService getScienceAppManagerService() {
		return scienceAppManagerService;
	}

	/**
	 * Sets the science app manager remote service.
	 *
	 * @param scienceAppManagerService the science app manager remote service
	 */
	public void setScienceAppManagerService(
		org.kisti.edison.science.service.ScienceAppManagerService scienceAppManagerService) {
		this.scienceAppManagerService = scienceAppManagerService;
	}

	/**
	 * Returns the science app manager persistence.
	 *
	 * @return the science app manager persistence
	 */
	public ScienceAppManagerPersistence getScienceAppManagerPersistence() {
		return scienceAppManagerPersistence;
	}

	/**
	 * Sets the science app manager persistence.
	 *
	 * @param scienceAppManagerPersistence the science app manager persistence
	 */
	public void setScienceAppManagerPersistence(
		ScienceAppManagerPersistence scienceAppManagerPersistence) {
		this.scienceAppManagerPersistence = scienceAppManagerPersistence;
	}

	/**
	 * Returns the science app manager finder.
	 *
	 * @return the science app manager finder
	 */
	public ScienceAppManagerFinder getScienceAppManagerFinder() {
		return scienceAppManagerFinder;
	}

	/**
	 * Sets the science app manager finder.
	 *
	 * @param scienceAppManagerFinder the science app manager finder
	 */
	public void setScienceAppManagerFinder(
		ScienceAppManagerFinder scienceAppManagerFinder) {
		this.scienceAppManagerFinder = scienceAppManagerFinder;
	}

	/**
	 * Returns the science app output ports local service.
	 *
	 * @return the science app output ports local service
	 */
	public org.kisti.edison.science.service.ScienceAppOutputPortsLocalService getScienceAppOutputPortsLocalService() {
		return scienceAppOutputPortsLocalService;
	}

	/**
	 * Sets the science app output ports local service.
	 *
	 * @param scienceAppOutputPortsLocalService the science app output ports local service
	 */
	public void setScienceAppOutputPortsLocalService(
		org.kisti.edison.science.service.ScienceAppOutputPortsLocalService scienceAppOutputPortsLocalService) {
		this.scienceAppOutputPortsLocalService = scienceAppOutputPortsLocalService;
	}

	/**
	 * Returns the science app output ports persistence.
	 *
	 * @return the science app output ports persistence
	 */
	public ScienceAppOutputPortsPersistence getScienceAppOutputPortsPersistence() {
		return scienceAppOutputPortsPersistence;
	}

	/**
	 * Sets the science app output ports persistence.
	 *
	 * @param scienceAppOutputPortsPersistence the science app output ports persistence
	 */
	public void setScienceAppOutputPortsPersistence(
		ScienceAppOutputPortsPersistence scienceAppOutputPortsPersistence) {
		this.scienceAppOutputPortsPersistence = scienceAppOutputPortsPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return RequiredLibConfirm.class;
	}

	protected String getModelClassName() {
		return RequiredLibConfirm.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = requiredLibConfirmPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = org.kisti.edison.science.service.CommonLibLocalService.class)
	protected org.kisti.edison.science.service.CommonLibLocalService commonLibLocalService;
	@BeanReference(type = org.kisti.edison.science.service.CommonLibService.class)
	protected org.kisti.edison.science.service.CommonLibService commonLibService;
	@BeanReference(type = CommonLibPersistence.class)
	protected CommonLibPersistence commonLibPersistence;
	@BeanReference(type = CommonLibFinder.class)
	protected CommonLibFinder commonLibFinder;
	@BeanReference(type = org.kisti.edison.science.service.CommonModuleLocalService.class)
	protected org.kisti.edison.science.service.CommonModuleLocalService commonModuleLocalService;
	@BeanReference(type = org.kisti.edison.science.service.CommonModuleService.class)
	protected org.kisti.edison.science.service.CommonModuleService commonModuleService;
	@BeanReference(type = CommonModulePersistence.class)
	protected CommonModulePersistence commonModulePersistence;
	@BeanReference(type = org.kisti.edison.science.service.DeveloperInfoLocalService.class)
	protected org.kisti.edison.science.service.DeveloperInfoLocalService developerInfoLocalService;
	@BeanReference(type = org.kisti.edison.science.service.DeveloperInfoService.class)
	protected org.kisti.edison.science.service.DeveloperInfoService developerInfoService;
	@BeanReference(type = DeveloperInfoPersistence.class)
	protected DeveloperInfoPersistence developerInfoPersistence;
	@BeanReference(type = DeveloperInfoFinder.class)
	protected DeveloperInfoFinder developerInfoFinder;
	@BeanReference(type = org.kisti.edison.science.service.DeveloperIpLocalService.class)
	protected org.kisti.edison.science.service.DeveloperIpLocalService developerIpLocalService;
	@BeanReference(type = org.kisti.edison.science.service.DeveloperIpService.class)
	protected org.kisti.edison.science.service.DeveloperIpService developerIpService;
	@BeanReference(type = DeveloperIpPersistence.class)
	protected DeveloperIpPersistence developerIpPersistence;
	@BeanReference(type = org.kisti.edison.science.service.DeveloperRequestLocalService.class)
	protected org.kisti.edison.science.service.DeveloperRequestLocalService developerRequestLocalService;
	@BeanReference(type = org.kisti.edison.science.service.DeveloperRequestService.class)
	protected org.kisti.edison.science.service.DeveloperRequestService developerRequestService;
	@BeanReference(type = DeveloperRequestPersistence.class)
	protected DeveloperRequestPersistence developerRequestPersistence;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeLocalService.class)
	protected org.kisti.edison.science.service.PortTypeLocalService portTypeLocalService;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeService.class)
	protected org.kisti.edison.science.service.PortTypeService portTypeService;
	@BeanReference(type = PortTypePersistence.class)
	protected PortTypePersistence portTypePersistence;
	@BeanReference(type = PortTypeFinder.class)
	protected PortTypeFinder portTypeFinder;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeAnalyzerLinkLocalService.class)
	protected org.kisti.edison.science.service.PortTypeAnalyzerLinkLocalService portTypeAnalyzerLinkLocalService;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeAnalyzerLinkService.class)
	protected org.kisti.edison.science.service.PortTypeAnalyzerLinkService portTypeAnalyzerLinkService;
	@BeanReference(type = PortTypeAnalyzerLinkPersistence.class)
	protected PortTypeAnalyzerLinkPersistence portTypeAnalyzerLinkPersistence;
	@BeanReference(type = PortTypeAnalyzerLinkFinder.class)
	protected PortTypeAnalyzerLinkFinder portTypeAnalyzerLinkFinder;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeEditorLinkLocalService.class)
	protected org.kisti.edison.science.service.PortTypeEditorLinkLocalService portTypeEditorLinkLocalService;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeEditorLinkService.class)
	protected org.kisti.edison.science.service.PortTypeEditorLinkService portTypeEditorLinkService;
	@BeanReference(type = PortTypeEditorLinkPersistence.class)
	protected PortTypeEditorLinkPersistence portTypeEditorLinkPersistence;
	@BeanReference(type = PortTypeEditorLinkFinder.class)
	protected PortTypeEditorLinkFinder portTypeEditorLinkFinder;
	@BeanReference(type = org.kisti.edison.science.service.PortTypeInputdeckFormLocalService.class)
	protected org.kisti.edison.science.service.PortTypeInputdeckFormLocalService portTypeInputdeckFormLocalService;
	@BeanReference(type = PortTypeInputdeckFormPersistence.class)
	protected PortTypeInputdeckFormPersistence portTypeInputdeckFormPersistence;
	@BeanReference(type = org.kisti.edison.science.service.RequiredLibLocalService.class)
	protected org.kisti.edison.science.service.RequiredLibLocalService requiredLibLocalService;
	@BeanReference(type = org.kisti.edison.science.service.RequiredLibService.class)
	protected org.kisti.edison.science.service.RequiredLibService requiredLibService;
	@BeanReference(type = RequiredLibPersistence.class)
	protected RequiredLibPersistence requiredLibPersistence;
	@BeanReference(type = RequiredLibFinder.class)
	protected RequiredLibFinder requiredLibFinder;
	@BeanReference(type = org.kisti.edison.science.service.RequiredLibConfirmLocalService.class)
	protected org.kisti.edison.science.service.RequiredLibConfirmLocalService requiredLibConfirmLocalService;
	@BeanReference(type = org.kisti.edison.science.service.RequiredLibConfirmService.class)
	protected org.kisti.edison.science.service.RequiredLibConfirmService requiredLibConfirmService;
	@BeanReference(type = RequiredLibConfirmPersistence.class)
	protected RequiredLibConfirmPersistence requiredLibConfirmPersistence;
	@BeanReference(type = org.kisti.edison.science.service.RequiredModuleLocalService.class)
	protected org.kisti.edison.science.service.RequiredModuleLocalService requiredModuleLocalService;
	@BeanReference(type = org.kisti.edison.science.service.RequiredModuleService.class)
	protected org.kisti.edison.science.service.RequiredModuleService requiredModuleService;
	@BeanReference(type = RequiredModulePersistence.class)
	protected RequiredModulePersistence requiredModulePersistence;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppLocalService scienceAppLocalService;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppService.class)
	protected org.kisti.edison.science.service.ScienceAppService scienceAppService;
	@BeanReference(type = ScienceAppPersistence.class)
	protected ScienceAppPersistence scienceAppPersistence;
	@BeanReference(type = ScienceAppFinder.class)
	protected ScienceAppFinder scienceAppFinder;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppCategoryLinkLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppCategoryLinkLocalService scienceAppCategoryLinkLocalService;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppCategoryLinkService.class)
	protected org.kisti.edison.science.service.ScienceAppCategoryLinkService scienceAppCategoryLinkService;
	@BeanReference(type = ScienceAppCategoryLinkPersistence.class)
	protected ScienceAppCategoryLinkPersistence scienceAppCategoryLinkPersistence;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppDescriptionLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppDescriptionLocalService scienceAppDescriptionLocalService;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppDescriptionService.class)
	protected org.kisti.edison.science.service.ScienceAppDescriptionService scienceAppDescriptionService;
	@BeanReference(type = ScienceAppDescriptionPersistence.class)
	protected ScienceAppDescriptionPersistence scienceAppDescriptionPersistence;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppFavoriteLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppFavoriteLocalService scienceAppFavoriteLocalService;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppFavoriteService.class)
	protected org.kisti.edison.science.service.ScienceAppFavoriteService scienceAppFavoriteService;
	@BeanReference(type = ScienceAppFavoritePersistence.class)
	protected ScienceAppFavoritePersistence scienceAppFavoritePersistence;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppInputPortsLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppInputPortsLocalService scienceAppInputPortsLocalService;
	@BeanReference(type = ScienceAppInputPortsPersistence.class)
	protected ScienceAppInputPortsPersistence scienceAppInputPortsPersistence;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppManagerLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppManagerLocalService scienceAppManagerLocalService;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppManagerService.class)
	protected org.kisti.edison.science.service.ScienceAppManagerService scienceAppManagerService;
	@BeanReference(type = ScienceAppManagerPersistence.class)
	protected ScienceAppManagerPersistence scienceAppManagerPersistence;
	@BeanReference(type = ScienceAppManagerFinder.class)
	protected ScienceAppManagerFinder scienceAppManagerFinder;
	@BeanReference(type = org.kisti.edison.science.service.ScienceAppOutputPortsLocalService.class)
	protected org.kisti.edison.science.service.ScienceAppOutputPortsLocalService scienceAppOutputPortsLocalService;
	@BeanReference(type = ScienceAppOutputPortsPersistence.class)
	protected ScienceAppOutputPortsPersistence scienceAppOutputPortsPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private RequiredLibConfirmServiceClpInvoker _clpInvoker = new RequiredLibConfirmServiceClpInvoker();
}