/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.content.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.kisti.edison.content.service.persistence.AdvancedContentPK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AdvancedContent service. Represents a row in the &quot;EDMED_AdvancedContent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.content.model.impl.AdvancedContentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.content.model.impl.AdvancedContentImpl}.
 * </p>
 *
 * @author EDISON
 * @see AdvancedContent
 * @see org.kisti.edison.content.model.impl.AdvancedContentImpl
 * @see org.kisti.edison.content.model.impl.AdvancedContentModelImpl
 * @generated
 */
public interface AdvancedContentModel extends BaseModel<AdvancedContent> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a advanced content model instance should use the {@link AdvancedContent} interface instead.
	 */

	/**
	 * Returns the primary key of this advanced content.
	 *
	 * @return the primary key of this advanced content
	 */
	public AdvancedContentPK getPrimaryKey();

	/**
	 * Sets the primary key of this advanced content.
	 *
	 * @param primaryKey the primary key of this advanced content
	 */
	public void setPrimaryKey(AdvancedContentPK primaryKey);

	/**
	 * Returns the content seq of this advanced content.
	 *
	 * @return the content seq of this advanced content
	 */
	public long getContentSeq();

	/**
	 * Sets the content seq of this advanced content.
	 *
	 * @param contentSeq the content seq of this advanced content
	 */
	public void setContentSeq(long contentSeq);

	/**
	 * Returns the group ID of this advanced content.
	 *
	 * @return the group ID of this advanced content
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this advanced content.
	 *
	 * @param groupId the group ID of this advanced content
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the title of this advanced content.
	 *
	 * @return the title of this advanced content
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this advanced content.
	 *
	 * @param title the title of this advanced content
	 */
	public void setTitle(String title);

	/**
	 * Returns the resume of this advanced content.
	 *
	 * @return the resume of this advanced content
	 */
	@AutoEscape
	public String getResume();

	/**
	 * Sets the resume of this advanced content.
	 *
	 * @param resume the resume of this advanced content
	 */
	public void setResume(String resume);

	/**
	 * Returns the content file path of this advanced content.
	 *
	 * @return the content file path of this advanced content
	 */
	@AutoEscape
	public String getContentFilePath();

	/**
	 * Sets the content file path of this advanced content.
	 *
	 * @param contentFilePath the content file path of this advanced content
	 */
	public void setContentFilePath(String contentFilePath);

	/**
	 * Returns the content file nm of this advanced content.
	 *
	 * @return the content file nm of this advanced content
	 */
	@AutoEscape
	public String getContentFileNm();

	/**
	 * Sets the content file nm of this advanced content.
	 *
	 * @param contentFileNm the content file nm of this advanced content
	 */
	public void setContentFileNm(String contentFileNm);

	/**
	 * Returns the content start file nm of this advanced content.
	 *
	 * @return the content start file nm of this advanced content
	 */
	@AutoEscape
	public String getContentStartFileNm();

	/**
	 * Sets the content start file nm of this advanced content.
	 *
	 * @param contentStartFileNm the content start file nm of this advanced content
	 */
	public void setContentStartFileNm(String contentStartFileNm);

	/**
	 * Returns the service language of this advanced content.
	 *
	 * @return the service language of this advanced content
	 */
	@AutoEscape
	public String getServiceLanguage();

	/**
	 * Sets the service language of this advanced content.
	 *
	 * @param serviceLanguage the service language of this advanced content
	 */
	public void setServiceLanguage(String serviceLanguage);

	/**
	 * Returns the view cnt of this advanced content.
	 *
	 * @return the view cnt of this advanced content
	 */
	public long getViewCnt();

	/**
	 * Sets the view cnt of this advanced content.
	 *
	 * @param viewCnt the view cnt of this advanced content
	 */
	public void setViewCnt(long viewCnt);

	/**
	 * Returns the insert ID of this advanced content.
	 *
	 * @return the insert ID of this advanced content
	 */
	public long getInsertId();

	/**
	 * Sets the insert ID of this advanced content.
	 *
	 * @param insertId the insert ID of this advanced content
	 */
	public void setInsertId(long insertId);

	/**
	 * Returns the insert date of this advanced content.
	 *
	 * @return the insert date of this advanced content
	 */
	public Date getInsertDate();

	/**
	 * Sets the insert date of this advanced content.
	 *
	 * @param insertDate the insert date of this advanced content
	 */
	public void setInsertDate(Date insertDate);

	/**
	 * Returns the update ID of this advanced content.
	 *
	 * @return the update ID of this advanced content
	 */
	public long getUpdateId();

	/**
	 * Sets the update ID of this advanced content.
	 *
	 * @param updateId the update ID of this advanced content
	 */
	public void setUpdateId(long updateId);

	/**
	 * Returns the update date of this advanced content.
	 *
	 * @return the update date of this advanced content
	 */
	public Date getUpdateDate();

	/**
	 * Sets the update date of this advanced content.
	 *
	 * @param updateDate the update date of this advanced content
	 */
	public void setUpdateDate(Date updateDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		org.kisti.edison.content.model.AdvancedContent advancedContent);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.content.model.AdvancedContent> toCacheModel();

	@Override
	public org.kisti.edison.content.model.AdvancedContent toEscapedModel();

	@Override
	public org.kisti.edison.content.model.AdvancedContent toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}